#!/bin/bash

########################################################################
# Matthew's Git Bash Prompt
########################################################################
RED="\[\033[0;31m\]"
YELLOW="\[\033[0;33m\]"
GREEN="\[\033[0;32m\]"
BLUE="\[\033[0;34m\]"
CYAN="\[\033[38;5;14m\]"
LIGHT_RED="\[\033[1;31m\]"
LIGHT_GREEN="\[\033[1;32m\]"
WHITE="\[\033[1;37m\]"
LIGHT_GRAY="\[\033[0;37m\]"
COLOR_NONE="\[\e[0m\]"

function parse_git_branch {
  git rev-parse --git-dir &> /dev/null
  git_status="$(git status 2> /dev/null)"
  branch_pattern="^On branch ([^${IFS}]*)"
  remote_pattern="Your branch is (.*) '"
  diverge_pattern="Your branch and (.*) have diverged"
  stage_pattern="Changes to be committed"
  clean_pattern="working directory clean"

  # add an else if or two here if you want to get more specific
  if [[ ${git_status} =~ ${remote_pattern} ]]; then
    if [[ ${BASH_REMATCH[1]} == "behind" ]]; then
      remote="${YELLOW}↓"
    elif [[ ${BASH_REMATCH[1]} == "ahead of" ]]; then
      remote="${YELLOW}↑"
    else
      remote=""
    fi
  fi

  if [[ ${git_status} =~ ${diverge_pattern} ]]; then
    remote="${YELLOW}↕"
  fi

  if [[ ${git_status} =~ ${branch_pattern} ]]; then
    branch=${BASH_REMATCH[1]}

    if [[ ${git_status}} =~ ${clean_pattern} ]]; then
      echo " ${GREEN}(${branch})${remote}"
    elif [[ ${git_status}} =~ ${stage_pattern} ]]; then
      echo " ${YELLOW}(${branch})${remote}"
    else
      echo " ${RED}(${branch})${remote}"
    fi
  fi
}

function git_dirty_flag {
  git status 2> /dev/null | grep -c : | awk '{if ($1 > 0) print "⚡"}'
}

function get_time() {
  echo "\t"
}

function get_previous_status() {
    if test $previous_return_value -eq 0
    then
        echo "${COLOR_NONE}>"
    else
        echo "${RED}>"
    fi
}

function prompt_func() {
    previous_return_value=$?;
    #The lowercase w is the full current working directory
    prompt="${TITLEBAR}${LIGHT_GRAY}[$(get_time)] ${CYAN}\w$(parse_git_branch)$(get_previous_status)"

    #Capital W is just the trailing part of the current working directory
    #prompt="${TITLEBAR}${LIGHT_GRAY}[$(get_time)] ${CYAN}\W$(parse_git_branch)${COLOR_NONE}"

    PS1="${prompt}${COLOR_NONE}\n\\$ \[$(tput sgr0)\]"
}

PROMPT_COMMAND=prompt_func
